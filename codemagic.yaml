workflows:
    ios-project:
        name: Native iOS
        environment:
            vars:
                CM_CERTIFICATE: Encrypted(Z0FBQUFBQmVZbUF4cDNZN1dPRV9Ta2lIZUFUcVBqbFVOSnFvell6czlMSG1NbzVkNGttTk9ZVDU2M3c3akJ0bHNtdU1rdUhoU09ycjE4Wk1rdzhVMGVxMEVoLVdJT2t6NEgzLURpaTY2M2cyblBBNHlleGVJWFl5aEJJaTBvYXJxakduRnYzc2NYZmtkUWNoWVZmQkRCS0tmZUpVR0JldW5NMzcwRDJrUUl5dHFhWWk5NU0yRms3YlB6X3hzcUdvczlEQlFfTXlDTWpxM1YxdEFZUzVLWkg4a2xIM1dGQjIyLVlYUTBSc0Y4MENaRXN6TlNROXIyNjVTemxaYVU4Z05FZWhoaHpleDFPSHAzUC1QZWdXSF9XcUJDaXZiUi0yNGRCelJTcnRpdGZ3TDYxYjBPN3poU3lIUk1uU1hEUWNXYnNEbFRKME44Wld0LTFUam9hZXlEaEJWemJpRmQwUGhpcnpaRzJtLTRtUm5NUFpMdUx3TV9EeGd2LWQ5SERkWlJrNGIwS2otdVR3S0hHbjA5RGxMLUZxa0RWOEVHU0dvMlFXMldYSmlDSDRjZ0VfNWZvUUo5RnJBT2VhWHFESDNGeXJuNkdJOXpoUnE5NUxmLXR2MHFrUjJfNzdhRjRWekptc2ZGMVNSUlAtRFk3a0d0Skg3TDA4YkkwMnFWdE9LVUJsNE5HZ01obk5VaEN0dXFIVDNMalVtSkVHYTlKSWFKcTYzWmdjekRNNkVwdW1ENEpHWVJLcGZITXpRaFFib1VlaWd4SlI4ZzEtQkRzMFM4bUdFM1hVQ241WTdQWWxGT2YwX0pZZ1dtb3kyMGNVYV9xSHYzMWtQN3gwYmg0Vm5KdG5WVmpaNVhna2xmeVFNY2hUWkdDcjRfVDBFZC1wTUE0dFdfbjVGeHh0MkducFlHRTdZbFZVaExiemwxZzFfRm5GNHlRdHZfQXgzeExoRV9tTzhGZ0VsbjdQYzR3aThTSGEtUTNzVmVhWXpXaFdTbmlZQ2YxSnlUcF85WUg2UG9ySEU1UVNUWlFMMGs3Y29ZeUdjaEtxeFRyQkZaSzR4UGVGYUhhNzg3ZnpmR0lmbTFMUWw3NlBDWXNfOGpPZS03Qkp4RU1Qenc0aEFBXzJqblpJSHdRUEw4RWNoQWlNTm1maWtVMWhsUktHQnRzdXBfdThuS2cyUWNZZUF3d2pmWHp4QWVQeE14OXYzWF9kMGhvVkhlZnZ2eWQwYk9odFo4ZVFpNTdCVzRIeWV4WnpxeDRublc3bnNHQWhSMEpCR1hMNnZIZnd0ZFZGb1RRZGR5dzI0RExpSFJxXzA2UEN1VnBwd1hDVXlMN0lINWJoNXVRZlk2eFF1TElxLTY0NHRTdl9SNlBPbEp5Q1FtTjNfVUI0MG9qRnhxQm1kLTlQWXR6WDlFOUtnX1FIbFZmSWliRkVvUGFoRTk5bklLLWU5SFA0TTM4NDU3VV9pbkNNd0Q1TmVCZU5yTjNaUndlWkhCNkxrVVB3bTlIWEVKbnZBandHeVM5YVJzcXJGVVVfZGJmcTVPTkVGU2JBQmh1aXdrYUpIR3dtb0gwZ2RpdXZ6OHFpU3NueFFGS19idFlJUmN4MUhvQ1NvMlE1QkRtVW9sb1ZPV2F2RHNWbzVRVGpTOHVIZ25KeWpmUEFXTjdlbWxsSTdpS2RxNHR5bmRkWVpWS0pGTFZQTnFzYzNFUkY4cnZKTGZBSTNXU2pvNFhWNEtnNERsMzRIVEhCY3o2ZUxicXh4aURIOHkyQUJyS2x6alpmenA0YnNiTUhzZS0xUmU3UERMYTJhYjNXMEFmeTBPMFlheUp5QnJYcDdQSnhfUXBOYjJka0VtNjhDZ09wM1JsSVBWOGk0dEQzNzBCRzE4eUJieE1GWXI0YWFHWGxlMDNRMG9EcGhSOGFvODhzMG1NUzRpX2ZFQTB6OGtNdXZ1VXN4R1EtVWxfZXBHUkpQbm5nLWdUTERTYlNGcWZ4bGRvSjVxbFJBVFF0cy1QRjdKNXM2NEJVODlfMVdtMXRvdjJrM0dzS1poOU9EZDBUNmoxdWRjWlk1VTN2emFSbXNzbExxRUItR18zcnpYWV9BV2hocWY3SUJBaU15cVJFamthOGFKQ1M4MTlCbk16VjA3YlAyRmZsMS1iRUJIU29kV2diaUdVYTR3aGRJWXFrMTFJLTFoYVBHTFdFMlRuWThpN21nWmh1Wm9zVXFPM0ZlMDNTRXhzVTFaeFJpdU1iYjhyM3dGQXdVRkdzM0xYR2w0bHFxUVRPNTBxWjJFUldvUEVVLWFBaHRfbGltWnJ4OWZ4Y2FtTEJrdG5sTFdHZk1MMWNuVmlDY0xjektud09PQ0M4QmJrb043aVpBUzF5bWU3S2tCY0pBaENDRGdiRlQ0RXZrMjY0X1dnN09ybUhOMHhISFhNZzM5SktqQUppS0xYMFVLTlBkVGpobVpiVzRlTERrdy0wWWRRTkFRWG5PNFFwQmhxVUxnUTZvYVBjSVVWazlHbFpSdDM4SVRrdWYwTW14NnE1cVFJZnBFYnJfcS1YN2dPZFdZRjdHbTFoZDFuT0J0TEg1eGRTNHdnM093UEpLbWZ2X3Z3dHN5aTZxTFRNdlFETGRmT252YUtlZGtLMHEyRHl0c2o2WU5oT3I2S2FFMEJkdXdpZWZmYTBkUGZITUZuMW9waFNhWFlXbUNma1ZOVUVsa1BOUXVaZHVJbkZWU1dxVEpzakdXSk9XWWZUU3U5RVpEV3p3b25ybXBzWm5EXzFvSXBYYWlBQ0lXYmNkMDc5UWlVaVc1VzhXa1JVRmFzekNsRURLV2hqT2pDWGxtNEgybnR1Rk1mZFFlVFVQMjV3amRxSTAtNHRHUkNGeWIyQmNtNjJxc2ptNGpFUXdQR1pQRzRBUFdhcjR1NEFrZUNKRFdvNkVXSmZsUTI4ZmZsSUV2alVFRjA3ZUxqWUJYay1jdlRkQndKaFlRMkpscExFaEVPWTB1R2QxQUxDQXYtSzZudFNpNlhVT1ZnRmc3TDJGc2JQLVNxc3FkdWM2ZXBfcE1ZYXhaUEMzay0yVHRjMnRJTVpGQ2F1Y19oRW81N1hVUkNRWmNxS1pRWVFoclpVUUV3bXVyZVluTDBnWGZsV0ZKMXZnTy1yNjkxSWUyX2lKSUlIQlpDZHdjTTlmU2Y5UTVKb2NpbHBKVlo1Z25kMnMxQ1BTZG5VMTV1WEVaam5wVnhLZmlSMUw1dFZpUTFHV1FBQkhtWEFELUVkaGRPS1FOMzV0R21xTGVkMUQ2MFkwczVsazJVc092bWdOdU45ZV9ndG8xMXNUOTJfY3hpbEcxLTR6Wno0ZGVXV3ZmaWE5SHFrOEx0ZU1JYTlEMlhzbV8zcXB1Qmk1TlZsQ29vejBXa2JiWVJaemR0YXJZWm8teUJXdmFDSFJtMHJzQVEzbnRtZGRUaG1KbDRnU1BLXzJpTDhwLUN6M3JuWE1HUWFEaVFBaEpmU3ZwX2hJOXdnaG9hR3JmSXA3b3JHeGxGQi1EOEU0WU84cmNXSlVoZTZ5Y3BoOWdFa00xOVI2d3hOQ0xNNGkwNzk3aGNBcjRMNTRKSERHbC1NQnpmdkNMMk9JR1hudkF1R2ZJaWpkd3dGRm5VWWR1bDM3c1ZyMlRZbWFNeE1zSVM5NXZiTHZWQXZTdUJGVGNUR0hGQ3VPQTZZWlI2RUk0dUppSVB0VTVibkV5NldzRmdXXzd5TFlVQTB6TFJXZ2NHRFhleHpVUjU0VlJvaDNkN2tDcmJ0LXI2N0xhcllBTjRRank1NXZqM1JSbU16SWRsQ1NnTVVRTzhwSWVBbXhWZlhNdEtubXRzcGFTQ0hTMVBjeVJBX0RZWGZxTThIM2JkdGdHRWZkRkw0R2s4VnpvalBqMFo1NHdQV0J3ckdtenRJcTZreFB4OUl4cUx3YXB1MmdNelJsWldBQXYzQ0tlX0R0eXA3QlJ5QmxaUWRjY2JnUTB0TGVENGhCcVFpcHYzakFoR29CeklXWG5LaVBabUxQU09ZazFLZWs1ak5wb3Y2VFF2ZXlFMVoyYVphRnlXdWlLYXh3S0ppbEN6M2FHVzhiU3NteHQ5X1EyWlpsLXRmc1JBTTN2TlZMZ2NtNkFBRWg2Y1pNb0xPTndjZ2paX1ctTmZFajVjYkk0UFRfNVd4REtNc05nODZFTXdsZXpJS01MN3Q3cVBReXlKNGdJeEIwY0FfWVI0ZEdXOWppUFhRMnJWRGhkVXVKYk04NlVuVGlqdzVjcnFHNU1GaUFiczQ3VkMyUGVuWDVRU1puOFRGU3BNQ2NSaXBfTUdiUmVMMWNGaGpuMDBza1VtdHJqWUtwN0xfX21jVDFweEpZYnJrRUVfVUtCN0RYOHBrOTRJN1NJRUg4NEtuajg0ajBGWFl4THFWSXNQcDVDRnN1ODhTdmpwcHB2UVc2SjF5TWNoMzlVNDlTa3l2UDI1Qkc5MnBjTUFtLTVBOWNwOTJkcDlQQ1hjMGx0T05TNS1yUWdKT1VJV2NPM1ZwX3F5alFiSU9XZW5vSXlIQVdLb2hQSWIxa09Td2lacXNjZkVyRTJPMWdOb0ZoQmROZ2FKR05ORG53TXBKSGJuZUh6WVh0bDNKaEExVUVlYjBqTGdJZFZWMjk3eUZJVVBHcTRKT082TXV0MThiRTJUZksyczhJQkl2OEEwaFFYbEk4T2dKTGQza01QUi12Ym05a1FMY3U3cjdFVjhHQzFNcExtM3lKbkdlRXhQbnJ2cnRSamtTU3hkaUdNZ1dnZ1h3cTktMXFSZDdPa0ZKRkV2a1Y0RlQ1bmk5NEVJN0ZOQTd3MXJWR1NGSko0V3dWQW1fdW93aXVWVGJVbEFlcnp3UGV1MVhXWnl5VlNHN2p6XzA1NGpfaTJkUkgtR3I0OHpvV0ZTalhicGxTTnNoWjlaN1lqMDRTY3FudjYwUllLQmhnekl2V2l4c296V3lUeTZVVDFlNFhtX2RuTEQ2ZTljMXlld0t2cFU4OHRfUDU2WEdCOW11MmZfLUhYcG5aN3U3bkpHd1ptUVkwbFp3aFFPbm11QzQxNTUxdTJCQUE5cGpJb1h1VXVLVGZzcEZXUVgxWGFfbWdtd3ZXVkRnczdFaUtDMjFDWDVrN0FkNW9PVlBtOXROSVdqdG9RV2JFN2U5cHItZzhGTVFSV1czUXJXMVFVaTVubko2TjJzb1FFcENSS3JNdEtrX01wM1NIUWdveVE1WnlyTjBJVzBIcnZSclRvVUc3RzVidkdHaU9oRDRtSHQ3ZzB4eFI4cC0zMDlQS0QtRmZ4MnFkbjFoZGYzYTJuc0NwQllQdkRaZVZmV2puN1prLWZOMlBzMVN6Nm9kdHFFQWJmeEhqMzlDLS01RDhpQnJQSG1sNDRvNjVKNFpOaHBOeTRjSVJHQ3JQVnJfTkZsSXlmbEJCYldoUUtsbFVpQS1Oa19ObnJ2dEVZQ1poVVExZzlqUXM3ZWp6QWRjZzJqOS1nb0dFRUs0cG9rSkh5eDYwcGlFbnFjcWgzb0VDVnNHU1BxMzR4dl9scF91WjdEanhhUVI0TThMQkJMRHcyVHJWUUZxcXMtMGR3MzBfM2JpV3BhZjJtZ2pTaFVreTVTSXhqUUhyWWFVUFQzd2dLTVVRdTlIU0JIdUswNXA5YnBHbVpGQS11N2lPeE9SX2Ruak1XOWEwdWpwcmZLbnNFTjBUNVZndjhEZVpaekMycGptWExxWE1pMHBCdUdPcks2VmYwUTFPNmVuZUNvZS1KbGpfcGNWVVpDLUFMR2RSN3JFT1RTSXVxVXhiZXRKMG1rdnVOUkl0UlZ2Tmo3dEF4aU54Zmw4LTlZdkFjSTk2cnQ4M19QQ3ZIMmdMQ21wSGxKNV82WmoyVUdJN0xXNWtydmpocjlxYzltbE5WSmIxZGdwb19aYzdtN3cwT2xQVjNsUGFUZnpXVHE5YzMxS1JneEUwNXA2Y3lFeDUwdTlLaUhCSUp4TWdIUHZvTUVfTWt1WXdLV2RnQk01SkJFSjBtMTRKd1hIQ2I5SmVWV0FBa24wdzNwamJnZ0x1UTNhQjJOOURuVVktNmE3WHFlTFRWTUlJMkIwUUdDRkFuTWQydEhScEpiRTh0emRMLWpRNDIya1pYekE5c2M0alcxX0JtdUZqSG1MQmtKQ29tdVQ1R2YwSVVKTTRnc012MXRRcjI2NldwYW83UVdLYkJuY2Q1MlRaVWRLaE5SZHkwM2g2OGI1Z3ZCOWF0VXVndXRFRkM1UEc3czQ1UjFNa205WmE1T3pvNWRPeTlIeklvWVZIMVdqRXFEUTBTZmlHWkQ4bEFhRjlpZmk2UFdTVlI1bmJlM2FESVBvdGwtMEZ1WHhteEF6VThBR2dxQzlyVFdFZkVUenFiQThYWXY1RTZmRFU2ZV9ScUJMZXBtR2FQbkJaWmhjRjVUMG5yd3E4N0ZnRERqZl9PUVhmdHIwanZjTjZ5MjFvcmg2M1hZZEJiVTQzRV8wRUJaSnpfRDAybThWbGZwRlU5dzJNOG5abWF3LUdqUjRrZzBxNVBtdnpCUlBkX2hDSFRRU3FCOVpiSGtNRmVvdXdMbVl3ci1jdFV1OWNmekwzWVJLLVIwSG1CTnJhRzVTWFhhajhMM2VnX05mZzFqa0o5OFh2dUEzeFVCbjI0aGFnb2tZUWttWjBTN1Y0a3pONXhlM2c5Sm9YTXc2U0dPQ3htNmVteTBoLVhZazJxZFdXOFhZMUVFT2hRdmNpWWRpVzJQUm5kUkJRNVhrbTM3eG5ibEN4QnEwaXFtZTdocnBHUVV5bWNnejgzN0Nrb1RoQmxnYS1OTG1KOWxDZXAtNUhHTndIX3JkZmdTVkhtSnEySGxZV1FZenl6SVQ1UDN1OUQtQmF1TmVZSk14U0xaY0RPVzdSdVlod0hPWmRKNzVsT1FEWmQyOHZuNVNYV05iUXVzNDVwN3k4dXM2bXowZmF6em5sRGtvTDk2Wko0c0plZk1uSlo2UFdXZ1BfakRQU3QxU3lPenZEZEhxVlRocXIyUDRsMnRaQ0hlZ3lVY19KZWVoaVJDNlFlZjcwWDFKUzEwMWd5dDI0VjZHMFBhVXpqaXV0MC1SMFFkS0tGOE5rZ2ZXbWsxbU9XeW9SSXBXMHpKYjQyS0ZvcXpHMFVScmRIZzNEWnJWNkJZYUtFZVJyZjFjVjIyNXhxZDNEZE5fSDMxUEY0bWdXdFFDRVdhWmZqNmp2MGkta0VZcHNJNXRnSkc4TnRwR3NfQTdkajkzU2U1QkFGRnZ6UUpFc2ZTS3VRNDJRVG1mMlR2SURSTDlzbnZ3eUlGQWl0S1k3aHdjV3JValVDVEpqSUFjSDdWNDJIajhzdkcwSjM5ZnZxQkNqR0VFRE1LN0x2Zkk0enlHZ2lNc2ZwMWhoVVQ1VDY4aFNic09NWktRNEljcmtIQThMcjBrX055NThQeWJnaTB4X2JqVVN0dVZUYW1NeVhZdHQyVUZZYmNkd1RmSVhjUTI4cG93a29fcmtDTmpDYktxdEh0ZlZ3cG55R1AwU0Eta21vS1M3QjRYS2dPSnVJOHRpYURZaVQ4N1hKbGJRS0N4RmE0WkVpbGpvMFlGdlNDSkNTaE9SWVlGQUJRaDE5RXJVTHJONVdZRFZaS0l3NFpOXzR4SFV5Mm5BYmpOLWdTN2RfRTZ5eGZ1QXZ5QmNXUVFfc1Y2TC1PZm52RXVYX2lI)
                CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmVZbUF4aElhQ1NxNXBBajQtcF9HOEZsM09FZUZnOEw2YlFHemFINy1rY1oweVJrbnFETndLYzY0YXVCVVJUdzRBamNMMHRaQlRfUFNwZ3liOFpSSnZXcnctVXc9PQ==)
                CM_PROVISIONING_PROFILE: Encrypted()
            xcode: latest
            cocoapods: default
        scripts:
            - keychain initialize
            - |
                # set up provisioning profiles
                PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
                mkdir -p "$PROFILES_HOME"
                PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
                echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
                echo "Saved provisioning profile $PROFILE_PATH"
            - |
                # set up signing certificate
                echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
                keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
            - |
                # run tests
                xcodebuild build-for-testing \
                -project BMI\ Calculator.xcodeproj \
                -scheme BMI\ Calculator \
                -destination 'platform=iOS Simulator,name=iPhone 11 Pro,OS=13.5'
            - |
                # build ipa
                xcode-project use-profiles
                xcode-project build-ipa --project "<your_xcode_project>.xcodeproj" --scheme "<your_scheme>"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
        publishing:
            email:
              recipients:
                - sbis1999@gmail.com